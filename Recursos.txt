## TCPServidor

### Introdução

Este documento descreve a aplicação **TCPServidor**, que implementa um servidor TCP para comunicação e compartilhamento de arquivos entre múltiplos clientes. A aplicação permite que os usuários conectem-se ao servidor, enviem mensagens de texto, compartilhem imagens e recebam imagens de outros clientes conectados.

### Funcionalidades

* **Iniciar servidor:** Inicia o servidor TCP, habilitando a escuta por conexões de clientes.
* **Aceitar conexões:** Aceita novas conexões de clientes e inicia threads para lidar com cada cliente conectado.
* **Gerenciar clientes:** Armazena informações sobre os clientes conectados, incluindo nome, cor de exibição e socket.
* **Receber e processar mensagens:** Recebe mensagens de texto e dados de arquivo de clientes, processa a mensagem e reenvia para os demais clientes conectados.
* **Enviar mensagens:** Permite que o servidor envie mensagens de texto para todos os clientes conectados.
* **Compartilhar imagens:** Permite que o servidor receba imagens de clientes e as reencaminhe para outros clientes.
* **Encerrar servidor:** Encerra o servidor, notificando os clientes, fechando sockets e liberando recursos.

### Arquitetura

A aplicação utiliza a biblioteca **System.Net.Sockets** para implementar a comunicação TCP. As funcionalidades são implementadas por meio de eventos e threads, garantindo que o servidor possa lidar com múltiplos clientes simultaneamente.

### Uso

1.  **Selecionar pasta compartilhada:**  Selecione a pasta onde o servidor salvará as imagens compartilhadas.
2.  **Iniciar servidor:**  Clique no botão "Iniciar" para iniciar o servidor.
3.  **Gerenciar clientes:**  A lista de clientes conectados é exibida na interface gráfica.
4.  **Enviar mensagens:**  Digite uma mensagem na caixa de texto e clique em "Mensagem" para enviar para todos os clientes conectados.
5.  **Compartilhar imagens:**  Clique em "Anexo" para escolher um arquivo de imagem e compartilhar com todos os clientes conectados.
6.  **Encerrar servidor:**  Clique em "Fechar Conexão" para encerrar o servidor e desconectar todos os clientes.

### Observações

* O código inclui tratamento de erros para garantir a robustez da aplicação.
* A documentação detalhada da implementação está disponível no código fonte.
* Esta aplicação é um exemplo básico de servidor TCP. Recursos adicionais, como segurança e autenticação, podem ser implementados para atender a requisitos específicos.

### Conclusão

A aplicação **TCPServidor** oferece uma funcionalidade simples para comunicação e compartilhamento de arquivos entre múltiplos clientes. A aplicação demonstra o uso da biblioteca **System.Net.Sockets** para implementar um servidor TCP básico.



## TCPCliente

### Introdução

Este documento descreve a aplicação **TCPCliente**, que implementa um cliente TCP para comunicação e compartilhamento de arquivos com um servidor TCP. A aplicação permite que os usuários se conectem a um servidor, enviem mensagens de texto, compartilhem imagens e recebam imagens do servidor.

### Funcionalidades

* **Conectar ao servidor:** Conecta o cliente a um servidor TCP com um endereço IP e porta específicos.
* **Enviar nome e cor:** Envia o nome de usuário e a cor de exibição escolhida pelo cliente para o servidor.
* **Enviar mensagens:**  Permite que o cliente envie mensagens de texto para o servidor.
* **Compartilhar imagens:**  Permite que o cliente envie imagens para o servidor.
* **Receber mensagens:**  Recebe mensagens de texto e dados de arquivo do servidor.
* **Receber imagens:**  Recebe imagens do servidor e as salva em uma pasta local.
* **Desconectar do servidor:** Desconecta o cliente do servidor e encerra a conexão.

### Arquitetura

A aplicação utiliza a biblioteca **System.Net.Sockets** para implementar a comunicação TCP. As funcionalidades são implementadas por meio de eventos e threads, garantindo que o cliente possa enviar e receber dados do servidor de forma assíncrona.

### Uso

1.  **Inserir informações:**  Insira o nome de usuário, o endereço IP do servidor e selecione a pasta para salvar as imagens recebidas.
2.  **Conectar ao servidor:**  Clique no botão "Conectar" para conectar-se ao servidor.
3.  **Enviar mensagens:**  Digite uma mensagem na caixa de texto e clique em "Mensagem" para enviar ao servidor.
4.  **Compartilhar imagens:**  Clique em "Anexo" para escolher um arquivo de imagem e compartilhar com o servidor.
5.  **Desconectar do servidor:**  Clique em "Desconectar" para encerrar a conexão com o servidor.

### Observações

* O código inclui tratamento de erros para garantir a robustez da aplicação.
* A documentação detalhada da implementação está disponível no código fonte.
* Esta aplicação é um exemplo básico de cliente TCP. Recursos adicionais, como segurança e autenticação, podem ser implementados para atender a requisitos específicos.

### Conclusão

A aplicação **TCPCliente** oferece uma funcionalidade simples para comunicação e compartilhamento de arquivos com um servidor TCP. A aplicação demonstra o uso da biblioteca **System.Net.Sockets** para implementar um cliente TCP básico.